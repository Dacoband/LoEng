// <auto-generated />
using System;
using LoEng.Server.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoEng.Server.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoEng.Server.Domain.Entities.Example", b =>
                {
                    b.Property<Guid>("ExampleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("DelFlg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("EnglishExample")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("VietnameseMeaning")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("WordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ExampleId")
                        .HasName("PK__Examples__C464770951EE04F1");

                    b.HasIndex("WordId");

                    b.ToTable("Examples");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.Level", b =>
                {
                    b.Property<Guid>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("DelFlg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("LevelId")
                        .HasName("PK__Levels__09F03C2652B547E7");

                    b.HasIndex(new[] { "LevelName" }, "UQ_LevelName")
                        .IsUnique();

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.Synonym", b =>
                {
                    b.Property<Guid>("SynonymId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("DelFlg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("SynonymWord")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("WordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SynonymId")
                        .HasName("PK__Synonyms__066F6383DFAD1011");

                    b.HasIndex("WordId");

                    b.ToTable("Synonyms");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("DelFlg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("TagId")
                        .HasName("PK__Tags__657CF9ACBF3CA37D");

                    b.HasIndex(new[] { "TagName" }, "UQ_TagName")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.Topic", b =>
                {
                    b.Property<Guid>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("DelFlg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("TopicId")
                        .HasName("PK__Topics__022E0F5D1E796FE7");

                    b.HasIndex(new[] { "TopicName" }, "UQ_TopicName")
                        .IsUnique();

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("DelFlg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4CC332DD18");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.UserWord", b =>
                {
                    b.Property<Guid>("UserWordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("DelFlg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsLearned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastReviewedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserWordId")
                        .HasName("PK__UserWord__6E1BC12F8BAFDCC2");

                    b.HasIndex("LevelId");

                    b.HasIndex("UserId");

                    b.HasIndex("WordId");

                    b.ToTable("UserWords");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.Word", b =>
                {
                    b.Property<Guid>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("DelFlg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EnglishWord")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("LevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Pronunciation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("TopicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("VietnameseMeaning")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("WordTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WordId")
                        .HasName("PK__Words__2C20F066D1723C41");

                    b.HasIndex("LevelId");

                    b.HasIndex("TopicId");

                    b.HasIndex("WordTypeId");

                    b.HasIndex(new[] { "EnglishWord" }, "UQ_EnglishWord")
                        .IsUnique();

                    b.ToTable("Words");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.WordTag", b =>
                {
                    b.Property<Guid>("WordTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("DelFlg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("WordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WordTagId")
                        .HasName("PK__WordTags__953D460CBC7084D6");

                    b.HasIndex("TagId");

                    b.HasIndex("WordId");

                    b.ToTable("WordTags");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.WordType", b =>
                {
                    b.Property<Guid>("WordTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("DelFlg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("WordTypeId")
                        .HasName("PK__WordType__C3532AAD5FA35DB9");

                    b.HasIndex(new[] { "TypeName" }, "UQ_TypeName")
                        .IsUnique();

                    b.ToTable("WordTypes");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.Example", b =>
                {
                    b.HasOne("LoEng.Server.Domain.Entities.Word", "Word")
                        .WithMany("Examples")
                        .HasForeignKey("WordId")
                        .HasConstraintName("FK__Examples__WordId__440B1D61");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.Synonym", b =>
                {
                    b.HasOne("LoEng.Server.Domain.Entities.Word", "Word")
                        .WithMany("Synonyms")
                        .HasForeignKey("WordId")
                        .HasConstraintName("FK__Synonyms__WordId__412EB0B6");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.UserWord", b =>
                {
                    b.HasOne("LoEng.Server.Domain.Entities.Level", "Level")
                        .WithMany("UserWords")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK__UserWords__Level__7E37BEF6");

                    b.HasOne("LoEng.Server.Domain.Entities.User", "User")
                        .WithMany("UserWords")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserWords__UserI__49C3F6B7");

                    b.HasOne("LoEng.Server.Domain.Entities.Word", "Word")
                        .WithMany("UserWords")
                        .HasForeignKey("WordId")
                        .HasConstraintName("FK__UserWords__WordI__4AB81AF0");

                    b.Navigation("Level");

                    b.Navigation("User");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.Word", b =>
                {
                    b.HasOne("LoEng.Server.Domain.Entities.Level", "Level")
                        .WithMany("Words")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK__Words__LevelId__7D439ABD");

                    b.HasOne("LoEng.Server.Domain.Entities.Topic", "Topic")
                        .WithMany("Words")
                        .HasForeignKey("TopicId")
                        .HasConstraintName("FK__Words__TopicId__3B75D760");

                    b.HasOne("LoEng.Server.Domain.Entities.WordType", "WordType")
                        .WithMany("Words")
                        .HasForeignKey("WordTypeId")
                        .HasConstraintName("FK__Words__WordTypeI__3C69FB99");

                    b.Navigation("Level");

                    b.Navigation("Topic");

                    b.Navigation("WordType");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.WordTag", b =>
                {
                    b.HasOne("LoEng.Server.Domain.Entities.Tag", "Tag")
                        .WithMany("WordTags")
                        .HasForeignKey("TagId")
                        .HasConstraintName("FK__WordTags__TagId__534D60F1");

                    b.HasOne("LoEng.Server.Domain.Entities.Word", "Word")
                        .WithMany("WordTags")
                        .HasForeignKey("WordId")
                        .HasConstraintName("FK__WordTags__WordId__52593CB8");

                    b.Navigation("Tag");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.Level", b =>
                {
                    b.Navigation("UserWords");

                    b.Navigation("Words");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.Tag", b =>
                {
                    b.Navigation("WordTags");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.Topic", b =>
                {
                    b.Navigation("Words");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.User", b =>
                {
                    b.Navigation("UserWords");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.Word", b =>
                {
                    b.Navigation("Examples");

                    b.Navigation("Synonyms");

                    b.Navigation("UserWords");

                    b.Navigation("WordTags");
                });

            modelBuilder.Entity("LoEng.Server.Domain.Entities.WordType", b =>
                {
                    b.Navigation("Words");
                });
#pragma warning restore 612, 618
        }
    }
}
